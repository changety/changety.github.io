<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: octpress | Bian's blog]]></title>
  <link href="http://changety.github.io/blog/categories/octpress/atom.xml" rel="self"/>
  <link href="http://changety.github.io/"/>
  <updated>2014-10-12T23:36:42+08:00</updated>
  <id>http://changety.github.io/</id>
  <author>
    <name><![CDATA[BianYuting]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用github page与octopress搭建个人blog]]></title>
    <link href="http://changety.github.io/blog/2014/10/12/setup-octopress-github-blog/"/>
    <updated>2014-10-12T03:00:00+08:00</updated>
    <id>http://changety.github.io/blog/2014/10/12/setup-octopress-github-blog</id>
    <content type="html"><![CDATA[<h1>前言</h1>

<p>前段时间云音乐Android小组打算自己搭建一个blog，用于总结跟记录工作中遇到的技术问题。之前自己在其他地方记录过几篇blog，也一直想搭个blog的玩玩，借此机会正好操练。
出于对Github极大的好感，自然就想到利用Github Page服务搭建一个blog，网络上已经存在大量关于利用Github与Octopress搭建blog的文章，但是质量参次不齐，实际我在搭建的过程中就遇到了不少问题，这里记录一下其他文章中忽略的一些细节，帮助同样碰到相同问题的同学节省时间。可能少有人会跟我一样折腾，打算在一台mac上维护两个octopress blog、其中一个octopress blog还需要在多台设备上一起更新（android 小组），因此这篇blog先介绍创建一个常规octopress blog的步骤，之后再调整一下one device to multi octopress blogs &amp; one octopress blog to multi devices的正确姿势。</p>

<hr />

<h1>配置github信息</h1>

<p>默认你已经创建了github帐号，如果还没有，先到<a href="https://github.com/">github</a>上注册一个，记得起一个酷炫或者有特殊意义的<code>username</code>，这会是个稍候blog域名的prefix。并且默认你已经完成本机上完成github帐号信息的配置，如果还没有，请查看<a href="https://help.github.com/articles/set-up-git/">github help</a></p>

<hr />

<h1>节省漫长的十多分钟等待时间</h1>

<p>首先到<a href="https://github.com/new">github</a>创建一个<code>username.github.io</code>的repo，<code>username.github.io</code>以后就是blog的域名（当然他支持使用自定义的域名）， username就是你在github上的username。之所以先完成这一步，是因为github一般需要10分钟左右来同步缓存数据，有高清图为证：</p>

<p><img src="/images/why_this_first.png"></p>

<hr />

<h1>准备安装Octopress所需的环境</h1>

<p><a href="http://octopress.org/docs/setup/">这里</a>是Octopress的官方指南，里面很精简的描述了安装步骤，我这里再啰嗦一次（主要是想讲坑</p>

<p>安装octopress时，首先需要git跟ruby环境，这两样工具，一般mac都已经自带了，可以在terminal里分别</p>

<pre><code>$ git --version
</code></pre>

<p>git的版本号对安装octopress影响不大，这里不用关心，只要有git工具就可以了。</p>

<pre><code>$ ruby --version
</code></pre>

<p>如果打印出来的ruby版本信息是1.9.3，那接下来的安装会省却不少麻烦。ruby的向下兼容不好，因此基于Ruby所做的框架大多要求特定版本，octpress也是，<a href="http://octopress.org/docs/setup/">这里</a>就提到需要ruby 1.9.3这个版本，我当时想试试mac自带的2.1.1这个ruby版本上的安装，结果是一坑接一坑，会缺各种各样依赖，所以不想折腾的朋友老实安装1.9.3这个版本好了。ruby多版本管理可以用RVM和rbenv。在mac下，推荐使用<a href="http://brew.sh/">Homebrew</a>来安装rbenv（ruby社区普通推荐rbenv），如果你没有Homebrew，打开终端，先安装完Homebrew，根据终端一步一步安装完就好，基本不会遇到什么问题。</p>

<pre><code>$ ruby -e "$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)"
</code></pre>

<p>有了Homebrew就可以安装rbenv了</p>

<pre><code>$ brew update 
$ brew install rbenv
$ brew install ruby-build
</code></pre>

<p>使用rbenv安装1.9.3版本的ruby，ruby1.9.3下还有多次发行版，稳妥期间，推荐直接安装1.9.3-p125，参考过其他blog的经验</p>

<pre><code>$ rbenv install 1.9.3-p125
$ rbenv local 1.9.3-p125 #Sets a local application-specific Ruby version
$ rbenv rehash
$ ruby --version #ruby 1.9.3p125 (2012-02-16 revision 34643) [x86_64-darwin13.1.0]
</code></pre>

<hr />

<p>安装完成后可以用ruby &ndash;version进行验证，那么问题就来了，虽然上面敲了rbenv local设置在当前的ruby版本环境，终端很有可能显示的还是mac自带的版本，原因是因为还没有在
<code>
cd ~/.bash_profile
</code>
配置rbenv的环境变量，具体步骤如下： （更详尽的配置说明参考<a href="https://github.com/sstephenson/rbenv">这里</a></p>

<p>Add ~/.rbenv/bin to your $PATH for access to the rbenv command-line utility.</p>

<pre><code>$ echo 'export PATH="$HOME/.rbenv/bin:$PATH"' &gt;&gt; ~/.bash_profile
</code></pre>

<p>Ubuntu Desktop note: Modify your ~/.bashrc instead of ~/.bash_profile.
Zsh note: Modify your ~/.zshrc file instead of ~/.bash_profile.</p>

<p>Add rbenv init to your shell to enable shims and autocompletion.</p>

<pre><code>$ echo 'eval "$(rbenv init -)"' &gt;&gt; ~/.bash_profile
</code></pre>

<p>Same as in previous step, use ~/.bashrc on Ubuntu, or ~/.zshrc for Zsh.
<code>
$ source ~/.bash_profile
</code></p>

<p>然后再切到~/octopress下，
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ruby &ndash;version #此时应该已是1.9.3p125 (2012-02-16 revision 34643)&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;---------
</span><span class='line'>
</span><span class='line'>#安装Octopress
</span><span class='line'>准备完毕octopress所需的环境后，就可以按照官方指南安装Octpress了
</span><span class='line'>
</span><span class='line'>###clone octopress
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;$ git clone git://github.com/imathis/octopress.git octopress</span></code></pre></td></tr></table></div></figure></p>

<h3>安装依赖</h3>

<pre><code>$ cd octopress
$ gem install bundler
$ rbenv rehash
$ bundle install
</code></pre>

<h3>安装octopress默认主题</h3>

<pre><code>$ rake install
</code></pre>

<p>接下去会专门写一篇关于octopress主题的blog</p>

<hr />

<p>运行以下命令，仔细看提示完成github和Octopress的关联（就是第一步创建的这个repo <a href="https://github.com/username/username.github.io">https://github.com/username/username.github.io</a></p>

<pre><code>$ rake setup_github_pages
</code></pre>

<hr />

<h1>创建博客</h1>

<h3>生成博客</h3>

<pre><code>$ rake generate 
</code></pre>

<h3>上传代码</h3>

<pre><code>$ git add .
$ git commit -m 'create first blog'
$ git push origin source
</code></pre>

<h3>部署博客</h3>

<pre><code>$ rake deploy
</code></pre>

<p>这里<code>origin</code>代表与octopress关联的repo
此时如果顺利完成后就能直接访问<code>http://username.github.io</code>看到自己的博客了， 由于首先创建了repo，就不需要等待10分钟了。</p>

<h3>修改配置</h3>

<p>配置文件路径为<code>~/octopress/_config.yml</code></p>

<pre><code>url:                # For rewriting urls for RSS, etc
title:              # Used in the header and title tags
subtitle:           # A description used in the header
author:             # Your name, for RSS, Copyright, Metadata
simple_search:      # Search engine for simple site search
description:        # A default meta description for your site
date_format:        # Format dates using Ruby's date strftime syntax
subscribe_rss:      # Url for your blog's feed, defauts to /atom.xml
subscribe_email:    # Url to subscribe by email (service required)
category_feeds:     # Enable per category RSS feeds (defaults to false in 2.1)
email:              # Email address for the RSS feed if you want it.
</code></pre>

<p>编辑完成后</p>

<pre><code>$ rake generate

$ git add .
$ git commit -m "settings" 
$ git push origin source

$ rake deploy
</code></pre>

<hr />

<h1>写博客</h1>

<p>到此为此博客已经成功搭建，赶紧测试一篇<code>hello world</code>的blog压压惊</p>

<h3>创建博文</h3>

<pre><code>$ rake new_post['hello world']
</code></pre>

<p>生成的blog文件在<code>~/octopress/source/_posts</code>目录下，接下来可以用你所熟悉的markdown工具写博客了。</p>

<h3>使用markdown写博文</h3>

<p>如果一开始对markdown的语法不熟悉，这里推荐一个<a href="http://dillinger.io/">在线学习markdown语法的网站</a>)，所见即所得；或者可以直接其他blog上的用markdown写的文章，fork下来，参考样式与语法的比对，这样上手还是很快的。
写完后使用以下指令，并在浏览中输入<code>localhost:4000</code>, 查看blog的效果</p>

<pre><code>$ rake preview #localhost:4000
</code></pre>

<p>调试完后，生成blog并部署到github page上</p>

<pre><code>$ rake generate

$ git add .
$ git commit -m "comment" 
$ git push origin source

$ rake deploy
</code></pre>

<p>以上便是创建一个github的全部过程了，下一篇会继续说明如果在一台电脑上管理多个octpress blog 以及 一个octopress在多台电脑上共同维护的方法。</p>

<hr />

<h1>参考资料</h1>

<ul>
<li><a href="http://octopress.org/">http://octopress.org/</a></li>
<li><a href="http://msching.github.io/blog/2014/04/11/starting/">http://msching.github.io/blog/2014/04/11/starting/</a></li>
<li><a href="http://stackoverflow.com/questions/10940736/rbenv-not-changing-ruby-version">http://stackoverflow.com/questions/10940736/rbenv-not-changing-ruby-version</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
